<Window x:Class="ABU2021_ControlAndDebug.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ABU2021_ControlAndDebug"
        xmlns:vmodel="clr-namespace:ABU2021_ControlAndDebug.ViewModels"
        xmlns:mvvm="clr-namespace:MVVMLib;assembly=MVVMLib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=System"
        xmlns:input_t="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        mc:Ignorable="d"
        WindowStyle="None"
        WindowState="Maximized"
        Topmost="True"
        Title="MainWindow">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    </Window.Resources>
    <Window.DataContext>
        <vmodel:MainWindow/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+DbeSbcsChar" Command="{Binding Ctrl0}"/><!-- Ctrl+Oem3 -->
        <KeyBinding Gesture="Ctrl+OemEnlw" Command="{Binding Ctrl0}"/><!-- Ctrl+Oem3 -->
        <KeyBinding Gesture="Ctrl+0" Command="{Binding Ctrl0}"/>
        <KeyBinding Gesture="Ctrl+1" Command="{Binding Ctrl1}"/>
        <KeyBinding Gesture="Ctrl+2" Command="{Binding Ctrl2}"/>
        <KeyBinding Gesture="Ctrl+3" Command="{Binding Ctrl3}"/>
        <KeyBinding Gesture="Ctrl+4" Command="{Binding Ctrl4}"/>
    </Window.InputBindings>
    <Viewbox>
        <Grid x:Name="MainGrid" Height="800" Width="1000">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>


            <Menu  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" FontSize="14">
                <Menu.DataContext>
                    <vmodel:MenuBar/>
                </Menu.DataContext>
                <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel />
                    </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem Header="ファイル(_F)" DockPanel.Dock="Left">
                    <MenuItem Header="終了(_X)" Command="{Binding Shutdown_Click}"/>
                    <MenuItem Header="最小化(_M)" Command="{Binding Minimize_Click}"/>
                    <Separator/>
                </MenuItem>
                <MenuItem Header="設定(_E)" DockPanel.Dock="Left">
                    <MenuItem Header="デバッグメッセージ表示(_M)" IsCheckable="True" IsChecked="{Binding DebugSate.IsOutputMsg}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                デバッグ用のメッセージを出力タブに表示します<LineBreak/>
                                (表示済みのテキストに影響はありません)
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="通信セーフティ(_C)" IsCheckable="True" IsEnabled="False" IsChecked="{Binding DebugSate.IsCommunicatSafe}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                マシンとの通信時に必ず受信応答を待ちます<LineBreak/>
                                オンにすることを推奨
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="UIデバッグ(_U)" IsCheckable="True" IsChecked="{Binding DebugSate.IsUnlockUI}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                UIのデバッグの為に入力ロック等を解除します<LineBreak/>
                                開発者以外はオンにしないでください
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="表示(_V)" DockPanel.Dock="Left" Height="21" VerticalAlignment="Top">
                    <MenuItem Header="ジョイパッド入力(_I)" IsEnabled="{Binding IsCheckedJoypad}" 
                              Command="{Binding ViewJoypad_Click}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                    <Separator/>
                    <MenuItem Header="チーム [赤]" IsCheckable="True" IsChecked="{Binding MapProperty.IsTeamRed}"/>
                </MenuItem>
                <MenuItem Header="接続(_C)" DockPanel.Dock="Left">
                    <MenuItem Header="切断(_D)" IsEnabled="{Binding IsEnableDissconnect}" Command="{Binding Disconnect_Click}"/>
                    <Separator/>
                    <MenuItem Header="TR-ROS(Wifi)(_T)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedRosWifi}" Command="{Binding ConnectTrRosWifi_Click}"/>
                    <MenuItem Header="DR-ROS(Wifi)(_D)" IsCheckable="True" IsEnabled="False" IsChecked="{Binding IsCheckedRosWifi}" Command="{Binding ConnectDrRosWifi_Click}"/>
                    <MenuItem Header="STM(USB)(_U)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedStmUsb}" Command="{Binding ConnectStmUsb_Click}"/>
                    <Separator/>
                    <MenuItem Header="接続テスト(_G)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedStmUsb}" Command="{Binding ConnectStmUsb_Click}"/>
                    <Separator/>
                    <MenuItem Header="ジョイパッド(_J)" IsCheckable="True" IsChecked="{Binding IsCheckedJoypad}" Command="{Binding ActiveJoypad_Click}"/>
                </MenuItem>

                <MenuItem Header="{Binding ConnectedJoypadText}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
                <MenuItem Header="{Binding ConnectedText}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
                <MenuItem Header="{Binding WifiSSID}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
            </Menu>


            <TabControl Grid.Row="1" Grid.Column="0">
                <TabItem Header="マップ" FontSize="8">
                    <TabItem.DataContext>
                        <vmodel:MapControl/>
                    </TabItem.DataContext>
                    <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" 
                                  IsManipulationEnabled="True"
                                  PanningMode="None"
                                  KeyDown="{mvvm:InvokeCommand Test_KeyDown}"
                                  PreviewMouseWheel="{mvvm:InvokeCommand ScrollViewer_PreviewMouseWheel}" 
                                  PreviewMouseMove="{mvvm:InvokeCommand ScrollViewer_MouseMove}"
                                  PreviewMouseDown="{mvvm:InvokeCommand ScrollViewer_MouseDown}" 
                                  PreviewMouseUp="{mvvm:InvokeCommand ScrollViewer_MouseUp}"
                                  ManipulationCompleted="{mvvm:InvokeCommand ScrollViewer_ManipulationCompleted, Arg={x:Type input_t:ManipulationCompletedEventArgs}}"
                                  ManipulationStarting="{mvvm:InvokeCommand ScrollViewer_ManipulationStarting, Arg={x:Type input_t:ManipulationStartingEventArgs}}"
                                  ManipulationDelta="{mvvm:InvokeCommand ScrollViewer_ManipulationDelta, Arg={x:Type input_t:ManipulationDeltaEventArgs}}">
                        <ItemsControl Margin="0">
                            <ItemsControl.Resources>
                                <local:CenterOffsetConverter x:Key="CenterConv"/>
                                
                                <Storyboard x:Key="NextPotAnimation">
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Width"
                                        By="200" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="7"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Height"
                                        By="200" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="7"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Opacity"
                                        From="1" To="0.2" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False" >
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                
                                <Style TargetType="Canvas" x:Key="PotBase">
                                    <Setter Property="IsEnabled" Value="{Binding IsMachineEnabled}"/>
                                    <Setter Property="Visibility" Value="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}"/>
                                    <Setter Property="IsManipulationEnabled" Value="True"/>
                                </Style>
                                <Style TargetType="Ellipse" x:Key="PotBack">
                                    <Setter Property="Width" Value="{Binding PotHitboxDiameter}"/>
                                    <Setter Property="Height" Value="{Binding PotHitboxDiameter}"/>
                                    <Setter Property="Stroke" Value="Black"/>
                                    <Setter Property="StrokeThickness" Value="1"/>
                                    <Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="SlateGray" Opacity="0.0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style TargetType="Ellipse" x:Key="Pot">
                                    <Setter Property="Stroke" Value="{Binding TeamColor}"/>
                                    <Setter Property="StrokeThickness" Value="30"/>
                                    <Setter Property="Width" Value="{Binding PotDiameter, Mode=OneTime}"/>
                                    <Setter Property="Height" Value="{Binding PotDiameter, Mode=OneTime}"/>
                                    <Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGray" Opacity="0.8"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard 
                                                    x:Name="BeginPotEfect"
                                                    Storyboard="{StaticResource NextPotAnimation}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="BeginPotEfect"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="TextBlock" x:Key="PotNum">
                                    <Setter Property="FontSize" Value="70"/>
                                    <Setter Property="Width" Value="90"/>
                                    <Setter Property="Height" Value="90"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                </Style>
                            </ItemsControl.Resources>
                            
                            
                            <!--#region Map-->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Height="{Binding MapHeight}" 
                                            Width="{Binding MapWidth}" 
                                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                            Margin="30">
                                        <Canvas.Background>
                                            <ImageBrush ImageSource="{Binding MapProperty.MapPictureSoruce, Mode=OneWay}" Stretch="Fill"/>
                                        </Canvas.Background>
                                        <!--しょっぱな見づらいのアレなので-->
                                        <Canvas.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.1" ScaleY="0.1" />
                                            </TransformGroup>
                                        </Canvas.LayoutTransform>
                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <!--#endregion-->
                            
                            <!--#region Tables-->
                            <Image Source="{Binding MapProperty.Table2PictureSoruce, Mode=OneWay}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele2FrontOffset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele2FrontOffset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table2FrontRot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele2FrontCenter.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele2FrontCenter.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <Image Source="{Binding MapProperty.Table2PictureSoruce, Mode=OneWay}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele2BackOffset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele2BackOffset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table2BackRot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele2BackCenter.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele2BackCenter.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <Image Source="{Binding MapProperty.Table3PictureSoruce, Mode=OneWay}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele3Offset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele3Offset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table3Rot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele3Center.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele3Center.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <!--#endregion-->
                            
                            <!--#region Machine -->
                            <Canvas x:Name="MachineCanvas" 
                                    IsEnabled="{Binding IsMachineEnabled}"
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}">
                                <Canvas.Resources>
                                    <Storyboard x:Key="FlickerAnimation">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0.1" Duration="0:0:0.5"
                                                         RepeatBehavior="Forever" 
                                                         AutoReverse="true" />
                                    </Storyboard>
                                </Canvas.Resources>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding MachineCenter.X, Mode=OneWay}"
                                                            Y="{Binding MachineCenter.Y, Mode=OneWay}"/>
                                        <RotateTransform Angle="{Binding MachineRot, Mode=OneWay}"
                                                         CenterX="{Binding MachineCenter.X, Mode=OneWay}"
                                                         CenterY="{Binding MachineCenter.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Rectangle Stroke="LawnGreen"
                                           StrokeThickness="25"
                                           Height="{Binding MachineSize.Y}"
                                           Width="{Binding MachineSize.X}"
                                           Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"
                                           Canvas.Top="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="LightGray" Opacity="0.6"/>
                                    </Rectangle.Fill>
                                    <Rectangle.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}"/>
                                        </EventTrigger>
                                    </Rectangle.Triggers>
                                </Rectangle>
                                <Ellipse Fill="LawnGreen"
                                         Stroke="DarkOrange"
                                         StrokeThickness="10"
                                         Height="50"
                                         Width="50"
                                         Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"
                                         Canvas.Top="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                <TextBlock Text="{Binding MachineName}"
                                           FontSize="150"
                                           TextAlignment="Center"
                                           Width="{Binding MachineSize.Y}"
                                           Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}">
                                </TextBlock>
                                <Path
                                    Stroke="Khaki"
                                    StrokeThickness="10"
                                    Data="M0,0 L0,-8000"/>
                                <!--2度線 後でちゃんとバインドします-->
                                <Path
                                    Stroke="Indigo"
                                    StrokeThickness="8"
                                    Data="M0,0 L280,-8018"/>
                                <Path
                                    Stroke="Indigo"
                                    StrokeThickness="8"
                                    Data="M0,0 L-280,-8018"/>
                            </Canvas>
                            <!--#endregion-->

                            <!--#region Pots-->
                            <!--コレクション化した方が良くない？-->
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}"
                                    IsManipulationEnabled="True"
                                    Name="_1Right">
                                <Ellipse Style="{StaticResource PotBack}"/>
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot1RightIsHighlighted}"/>
                                <TextBlock Text="0⃣" Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot1RightPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot1RightPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" 
                                    IsManipulationEnabled="True"
                                    Name="_1Left">
                                <Ellipse Style="{StaticResource PotBack}"/>
                                <Ellipse Style="{StaticResource Pot}"  Tag="{Binding Pot1LeftIsHighlighted}"
                                         Name="Pot1L_Ellipse"/>
                                <TextBlock Text="1⃣" Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot1LeftPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot1LeftPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" 
                                    IsManipulationEnabled="True"
                                    Name="_2Front">
                                <Ellipse Style="{StaticResource PotBack}"/>
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot2FrontIsHighlighted}"
                                         Name="Pot2F_Ellipse"/>
                                <TextBlock Text="2⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot2FrontPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot2FrontPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" 
                                    IsManipulationEnabled="True"
                                    Name="_2Back">
                                <Ellipse Style="{StaticResource PotBack}"/>
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot2BackIsHighlighted}"
                                         Name="Pot2B_Ellipse"/>
                                <TextBlock Text="3⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot2BackPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot2BackPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" 
                                    IsManipulationEnabled="True"
                                    Name="_3">
                                <Ellipse Style="{StaticResource PotBack}"/>
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot3IsHighlighted}"
                                         Name="Pot3_Ellipse"/>
                                <TextBlock Text="4⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot3Point.X, Mode=OneWay}"
                                                            Y="{Binding Pot3Point.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <!--#endregion-->


                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
            </TabControl>


            <TabControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Margin="5, 0, 0, 0"  FontSize="18">
                <TabItem Header="TR">
                    <TabItem.DataContext>
                        <vmodel:ControlTabTR/>
                    </TabItem.DataContext>
                    
                    <DockPanel IsEnabled="{ Binding IsEnabled}">
                        <GroupBox DockPanel.Dock="Top" Header="ステータス" FontSize="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Text="非常停止"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"/>
                                <CheckBox 
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsEnabled="False"/>
                                <!--IsChecked="{Binding TR.IsOpenedRecovery, Mode=OneWay}"-->

                                <TextBlock 
                                    Text="ステータス"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"/>
                                <TextBox 
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="2"
                                    IsReadOnly="True"
                                    TextAlignment="Right"
                                    Text="{Binding TR.MachineState, Mode=OneWay}"/>
                                <TextBlock 
                                    Text="シーケンス"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"/>
                                <TextBox 
                                    Grid.Row="1"
                                    Grid.Column="3"
                                    Margin="2"
                                    IsReadOnly="True"
                                    TextAlignment="Right"
                                    Text="{Binding TR.MachineSequence, Mode=OneWay}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox DockPanel.Dock="Top" Header="矢ステータス" FontSize="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Button 
                                    Grid.Column="0"
                                    Content="機体上" 
                                    FontSize="16"
                                    Margin="10,5,10,5"
                                    Command="{Binding ArrowNumOnMachineButton_Click}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                                <Button
                                    Grid.Column="1"
                                    Content="ラック" 
                                    FontSize="16"
                                    Height="30"
                                    Margin="10,5,10,5"
                                    Command="{Binding ArrowNumOnRackButton_Click}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox DockPanel.Dock="Top" Header="射出角オフセット" FontSize="10">
                            <StackPanel Orientation="Vertical">
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Slider
                                        Grid.Column="1"
                                        Maximum="{Binding OffsetRadMax, Mode=OneTime}"
                                        Minimum="{Binding OffsetRadMin, Mode=OneTime}"
                                        SmallChange="{Binding OffsetRadSliderSmall, Mode=OneTime}"
                                        LargeChange="{Binding OffsetRadSliderLarge, Mode=OneTime}"
                                        Value="{Binding OffsetRad}"
                                        IsDirectionReversed="True">
                                    </Slider>
                                    <TextBlock
                                        Grid.Column="0"
                                        Text="{Binding OffsetDegMaxText}"
                                        HorizontalAlignment="Right"/>
                                    <TextBlock
                                        Grid.Column="2"
                                        Text="{Binding OffsetDegMinText}"
                                        HorizontalAlignment="Left"/>
                                </Grid>
                                <Grid Margin="7">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="2*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox
                                        Grid.Column="0"
                                        Text="{Binding OffsetDegText}"
                                        IsEnabled="{Binding OffsetRadIsEq}"
                                        FontSize="20"
                                        Margin="5"
                                        CommandManager.PreviewExecuted="{mvvm:InvokeCommand NoPasteTextBox_PreviewExecuted}"
                                        PreviewKeyDown="{mvvm:InvokeCommand InputDataTextBox_PreviewKeyDown}"
                                        PreviewTextInput="{mvvm:InvokeCommand DecimalTextBox_PreviewTextInput}"
                                        LostFocus="{mvvm:InvokeCommand OffsetDegBox_LostFocus}"
                                        TextAlignment="Right"/>
                                    <TextBlock
                                        Grid.Column="1"
                                        Text="°"
                                        Margin="5"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"/>
                                    <TextBox
                                        Grid.Column="2"
                                        Text="{Binding OffsetRadText}"
                                        IsEnabled="{Binding OffsetRadIsEq}"
                                        FontSize="20"
                                        Margin="5"
                                        CommandManager.PreviewExecuted="{mvvm:InvokeCommand NoPasteTextBox_PreviewExecuted}"
                                        PreviewKeyDown="{mvvm:InvokeCommand InputDataTextBox_PreviewKeyDown}"
                                        PreviewTextInput="{mvvm:InvokeCommand DecimalTextBox_PreviewTextInput}"
                                        LostFocus="{mvvm:InvokeCommand OffsetRadBox_LostFocus}"
                                        TextAlignment="Right"/>
                                    <TextBlock
                                        Grid.Column="3"
                                        Text="rad"
                                        Margin="5"
                                        VerticalAlignment="Bottom"
                                        HorizontalAlignment="Left"/>
                                </Grid>
                                <Grid Height="35">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Grid.Column="0"
                                        Margin="3"
                                        FontSize="8"
                                        Command="{Binding OffsetDegIncLButton_Click}"
                                        Content="&lt;&lt;[0.5°]"/>
                                    <Button
                                        Grid.Column="1"
                                        Margin="3"
                                        FontSize="8"
                                        Command="{Binding OffsetDegIncSButton_Click}"
                                        Content="&lt;&lt;[0.05°]"/>
                                    <Button
                                        Grid.Column="2"
                                        Margin="3"
                                        FontSize="8"
                                        Command="{Binding OffsetDegDecSButton_Click}"
                                        Content="[-0.05°] &gt;&gt;"/>
                                    <Button
                                        Grid.Column="3"
                                        Margin="3"
                                        FontSize="8"
                                        Command="{Binding OffsetDegDecLButton_Click}"
                                        Content="[-0.5°] &gt;&gt;"/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox DockPanel.Dock="Bottom" Header="射出キュー" FontSize="10">
                            <GroupBox.Resources>
                                <local:PotColorConverter x:Key="PotColorConv"/>
                                <local:PotNameConverter x:Key="PotNameConv"/>
                            </GroupBox.Resources>
                            <DataGrid 
                                FontSize="24"
                                ItemsSource="{Binding TR.PotsQueue}"
                                HorizontalScrollBarVisibility="Disabled"
                                AutoGenerateColumns="False"
                                CanUserAddRows="False" 
                                CanUserDeleteRows="False"
                                CanUserReorderColumns="False"
                                CanUserResizeRows="False" 
                                CanUserResizeColumns="False" 
                                CanUserSortColumns="False"
                                IsReadOnly="True"
                                SelectionMode="Single"
                                VirtualizingStackPanel.IsVirtualizing="True"
                                VirtualizingStackPanel.VirtualizationMode="Standard"
                                SelectedIndex="{Binding InjectQueueSelectedIndex}"
                                SelectedCellsChanged="{mvvm:InvokeCommand InjectQueue_SelectedCellChanged}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Width="0.9*" Header="Num" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=., Converter={StaticResource PotNameConv}, Mode=OneWay}"
                                                           Background="{Binding Path=., Converter={StaticResource PotColorConv}, Mode=OneWay}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>   
                        </GroupBox>
                        
                        <GroupBox DockPanel.Dock="Bottom" Header="コントロール" FontSize="10" >
                            <DockPanel>
                                <!--ボタン入力類-->
                                <Grid DockPanel.Dock="Top" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button 
                                        Content="発射"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="5"
                                        Height="30"
                                        Command="{Binding InjectButton_Click}"/>
                                </Grid>

                                <!--テキスト入力類-->
                                <Grid DockPanel.Dock="Top" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>


                                    <TextBlock 
                                        Text="射出速度"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"/>
                                    <TextBox 
                                        Grid.Row="1" 
                                        Grid.Column="2"
                                        Margin="2"
                                        FontSize="20"
                                        TextAlignment="Right"
                                        Text="{Binding InjectSpeedText}"
                                        CommandManager.PreviewExecuted="{mvvm:InvokeCommand NoPasteTextBox_PreviewExecuted}"
                                        PreviewKeyDown="{mvvm:InvokeCommand InputDataTextBox_PreviewKeyDown}"
                                        PreviewTextInput="{mvvm:InvokeCommand DecimalTextBox_PreviewTextInput}"
                                        LostFocus="{mvvm:InvokeCommand InjectTextBox_LostFocus}"/>
                                    <TextBlock 
                                        Text="m/s"
                                        Grid.Row="1"
                                        Grid.Column="3"
                                        VerticalAlignment="Bottom"
                                        Margin="2"/>

                                    <TextBlock 
                                        Text="着弾予測(床)"
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"/>
                                    <TextBox 
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Margin="2"
                                        FontSize="20"
                                        TextAlignment="Right"
                                        IsReadOnly="True"
                                        Text="{Binding FallPredictionText}"/>
                                    <TextBlock 
                                        Text="m"
                                        Grid.Row="2"
                                        Grid.Column="3"
                                        VerticalAlignment="Bottom"
                                        Margin="2"/>


                                </Grid>
                            </DockPanel>
                        </GroupBox>
                        

                    </DockPanel>
                </TabItem>
                <TabItem Header="DR" IsEnabled="False">

                </TabItem>
            </TabControl>




            <TabControl Grid.Row="2" Grid.Column="0"  Margin="0, 5, 0, 0">
                <TabItem Header="出力" FontSize="8">
                    <TabItem.DataContext>
                        <vmodel:OutputLog/>
                    </TabItem.DataContext>
                    <TextBox 
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto"
                        IsReadOnly="True"
                        IsReadOnlyCaretVisible="True"
                        FontSize="10" 
                        Text="{Binding Log.Text}"
                        TextChanged="{mvvm:InvokeCommand Log_TextChanged}"/>
                </TabItem>
            </TabControl>


            <GridSplitter 
                Grid.Row="2" Grid.Column="0"
                HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="5"/>
            <GridSplitter 
                Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"
                HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="5"/>
        </Grid>
    </Viewbox>
</Window>
