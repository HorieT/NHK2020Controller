<Window x:Class="ABU2021_ControlAndDebug.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ABU2021_ControlAndDebug"
        xmlns:vmodel="clr-namespace:ABU2021_ControlAndDebug.ViewModels"
        xmlns:mvvm="clr-namespace:MVVMLib;assembly=MVVMLib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=System"
        xmlns:input_t="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        mc:Ignorable="d"
        WindowStyle="None"
        WindowState="Maximized"
        Topmost="True"
        Title="MainWindow">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    </Window.Resources>
    <Viewbox>
        <Grid x:Name="MainGrid" Height="800" Width="1000">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>


            <Menu  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" FontSize="14">
                <Menu.DataContext>
                    <vmodel:MenuBar/>
                </Menu.DataContext>
                <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel />
                    </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem Header="ファイル(_F)" DockPanel.Dock="Left">
                    <MenuItem Header="終了(_X)" Command="{Binding Shutdown_Click}"/>
                    <MenuItem Header="最小化(_M)" Command="{Binding Minimize_Click}"/>
                    <Separator/>
                </MenuItem>
                <MenuItem Header="設定(_E)" DockPanel.Dock="Left">
                    <MenuItem Header="デバッグメッセージ表示(_M)" IsCheckable="True" IsChecked="{Binding DebugSate.IsOutputMsg}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                デバッグ用のメッセージを出力タブに表示します<LineBreak/>
                                (表示済みのテキストに影響はありません)
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="通信セーフティ(_C)" IsCheckable="True" IsEnabled="False" IsChecked="{Binding DebugSate.IsCommunicatSafe}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                マシンとの通信時に必ず受信応答を待ちます<LineBreak/>
                                オンにすることを推奨
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="UIデバッグ(_U)" IsCheckable="True" IsChecked="{Binding DebugSate.IsUnlockUI}">
                        <MenuItem.ToolTip>
                            <TextBlock>
                                UIのデバッグの為に入力ロック等を解除します<LineBreak/>
                                開発者以外はオンにしないでください
                            </TextBlock>
                        </MenuItem.ToolTip>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="表示(_V)" DockPanel.Dock="Left">
                    <MenuItem Header="ジョイパッド入力(_I)" IsEnabled="{Binding IsCheckedJoypad}" 
                              Command="{Binding ViewJoypad_Click}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                </MenuItem>
                <MenuItem Header="接続(_C)" DockPanel.Dock="Left">
                    <MenuItem Header="切断(_D)" IsEnabled="{Binding IsEnableDissconnect}" Command="{Binding Disconnect_Click}"/>
                    <Separator/>
                    <MenuItem Header="TR-ROS(Wifi)(_T)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedRosWifi}" Command="{Binding ConnectTrRosWifi_Click}"/>
                    <MenuItem Header="DR-ROS(Wifi)(_D)" IsCheckable="True" IsEnabled="False" IsChecked="{Binding IsCheckedRosWifi}" Command="{Binding ConnectDrRosWifi_Click}"/>
                    <MenuItem Header="STM(USB)(_U)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedStmUsb}" Command="{Binding ConnectStmUsb_Click}"/>
                    <Separator/>
                    <MenuItem Header="接続テスト(_G)" IsCheckable="True" IsEnabled="{Binding IsEnableConnect}" IsChecked="{Binding IsCheckedStmUsb}" Command="{Binding ConnectStmUsb_Click}"/>
                    <Separator/>
                    <MenuItem Header="ジョイパッド(_J)" IsCheckable="True" IsChecked="{Binding IsCheckedJoypad}" Command="{Binding ActiveJoypad_Click}"/>
                </MenuItem>

                <MenuItem Header="{Binding ConnectedJoypadText}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
                <MenuItem Header="{Binding ConnectedText}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
                <MenuItem Header="{Binding WifiSSID}" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False" IsManipulationEnabled="False" IsEnabled="False"/>
            </Menu>


            <TabControl Grid.Row="1" Grid.Column="0">
                <TabItem Header="マップ">
                    <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" 
                                  IsManipulationEnabled="True"
                                  PanningMode="None"
                                  PreviewMouseWheel="{mvvm:InvokeCommand ScrollViewer_PreviewMouseWheel}" 
                                  MouseMove="{mvvm:InvokeCommand ScrollViewer_MouseMove}"
                                  MouseDown="{mvvm:InvokeCommand ScrollViewer_MouseDown}" 
                                  MouseUp="{mvvm:InvokeCommand ScrollViewer_MouseUp}"
                                  ManipulationDelta="{mvvm:InvokeCommand ScrollViewer_ManipulationDelta, Arg={x:Type input_t:ManipulationDeltaEventArgs}}">
                        <ScrollViewer.DataContext>
                            <vmodel:MapControl/>
                        </ScrollViewer.DataContext>

                        <ItemsControl Margin="0">
                            <ItemsControl.Resources>
                                <local:CenterOffsetConverter x:Key="CenterConv"/>
                                <Storyboard x:Key="NextPotAnimation">
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Width"
                                        By="200" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Height"
                                        By="200" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation 
                                        Storyboard.TargetProperty="Opacity"
                                        From="1" To="0.2" Duration="0:0:1"
                                        RepeatBehavior="Forever" 
                                        AutoReverse="False" >
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <!--
                                <Style TargetType="Canvas" x:Key="PotBase">
                                    <Setter Property="IsEnabled" Value="{Binding IsMachineEnabled}"/>
                                    <Setter Property="Visibility" Value="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform 
                                                X="{Binding Tag.X, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                Y="{Binding Tag.Y, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                -->
                                <Style TargetType="Ellipse" x:Key="Pot">
                                    <Setter Property="Stroke" Value="{Binding TeamColor}"/>
                                    <Setter Property="StrokeThickness" Value="30"/>
                                    <Setter Property="Width" Value="{Binding PotDiameter, Mode=OneTime}"/>
                                    <Setter Property="Height" Value="{Binding PotDiameter, Mode=OneTime}"/>
                                    <Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGray" Opacity="0.8"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource NextPotAnimation}"/>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="TextBlock" x:Key="PotNum">
                                    <Setter Property="FontSize" Value="70"/>
                                    <Setter Property="Width" Value="90"/>
                                    <Setter Property="Height" Value="90"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                </Style>
                            </ItemsControl.Resources>
                            
                            
                            <!--#region Map-->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Height="{Binding MapHeight}" 
                                            Width="{Binding MapWidth}" 
                                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                            Margin="50">
                                        <Canvas.Background>
                                            <ImageBrush ImageSource="{Binding MapProperty.MapPictureSoruce, Mode=OneTime}" Stretch="Fill"/>
                                        </Canvas.Background>
                                        <!--しょっぱな見づらいのアレなので-->
                                        <Canvas.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.1" ScaleY="0.1" />
                                            </TransformGroup>
                                        </Canvas.LayoutTransform>
                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <!--#endregion-->
                            
                            <!--#region Tables-->
                            <Image Source="{Binding MapProperty.Table2PictureSoruce, Mode=OneTime}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele2FrontOffset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele2FrontOffset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table2FrontRot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele2FrontCenter.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele2FrontCenter.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <Image Source="{Binding MapProperty.Table2PictureSoruce, Mode=OneTime}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele2BackOffset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele2BackOffset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table2BackRot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele2BackCenter.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele2BackCenter.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <Image Source="{Binding MapProperty.Table3PictureSoruce, Mode=OneTime}"
                                   Height="{Binding TableHeight}"
                                   Width="{Binding TableWidth}">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Tabele3Offset.X, Mode=OneTime}"
                                                            Y="{Binding Tabele3Offset.Y, Mode=OneTime}"/>
                                        <RotateTransform Angle="{Binding Table3Rot, Mode=OneWay}"
                                                         CenterX="{Binding Tabele3Center.X, Mode=OneTime}"
                                                         CenterY="{Binding Tabele3Center.Y, Mode=OneTime}"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <!--#endregion-->

                            <!--#region Pots-->
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot1RightIsHighlighted}"/>
                                <TextBlock Text="0⃣" Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot1RightPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot1RightPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <Ellipse Style="{StaticResource Pot}"  Tag="{Binding Pot1LeftIsHighlighted}"/>
                                <TextBlock Text="1⃣" Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot1LeftPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot1LeftPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot2FrontIsHighlighted}"/>
                                <TextBlock Text="2⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot2FrontPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot2FrontPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot2BackIsHighlighted}"/>
                                <TextBlock Text="3⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot2BackPoint.X, Mode=OneWay}"
                                                            Y="{Binding Pot2BackPoint.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <Canvas IsEnabled="{Binding IsMachineEnabled}" 
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <Ellipse Style="{StaticResource Pot}" Tag="{Binding Pot3IsHighlighted}"/>
                                <TextBlock Text="4⃣"  Style="{StaticResource PotNum}"/>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Pot3Point.X, Mode=OneWay}"
                                                            Y="{Binding Pot3Point.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                            <!--#endregion-->


                            <Canvas x:Name="MachineCanvas" 
                                    IsEnabled="{Binding IsMachineEnabled}"
                                    Visibility="{Binding IsMachineEnabled, Converter={StaticResource BoolToVisibility}}">
                                <Canvas.Resources>
                                    <Storyboard x:Key="FlickerAnimation">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0.1" Duration="0:0:0.5"
                                                         RepeatBehavior="Forever" 
                                                         AutoReverse="true" />
                                    </Storyboard>
                                </Canvas.Resources>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding MachineCenter.X, Mode=OneWay}"
                                                            Y="{Binding MachineCenter.Y, Mode=OneWay}"/>
                                        <RotateTransform Angle="{Binding MachineRot, Mode=OneWay}"
                                                         CenterX="{Binding MachineCenter.X, Mode=OneWay}"
                                                         CenterY="{Binding MachineCenter.Y, Mode=OneWay}"/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Rectangle Stroke="LawnGreen"
                                           StrokeThickness="25"
                                           Height="{Binding MachineSize.Y}"
                                           Width="{Binding MachineSize.X}"
                                           Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"
                                           Canvas.Top="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="LightGray" Opacity="0.6"/>
                                    </Rectangle.Fill>
                                    <Rectangle.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}"/>
                                        </EventTrigger>
                                    </Rectangle.Triggers>
                                </Rectangle>
                                <Ellipse Fill="LawnGreen"
                                         Stroke="DarkOrange"
                                         StrokeThickness="10"
                                         Height="50"
                                         Width="50"
                                         Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"
                                         Canvas.Top="{Binding Height, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}"/>
                                <TextBlock Text="{Binding MachineName}"
                                           FontSize="150"
                                           TextAlignment="Center"
                                           Width="{Binding MachineSize.Y}"
                                           Canvas.Left="{Binding Width, RelativeSource={RelativeSource Self}, Converter={StaticResource CenterConv}}">
                                </TextBlock>
                            </Canvas>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
            </TabControl>


            <TabControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Margin="5, 0, 0, 0"  FontSize="16">
                <TabItem Header="無効">

                </TabItem>
                <TabItem Header="TR" IsEnabled="{Binding IsEnabed, Mode=OneWay}">
                    <TabItem.DataContext>
                        <vmodel:ControlTabTR/>
                    </TabItem.DataContext>
                    <DockPanel IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}">
                        <GroupBox DockPanel.Dock="Top" Header="ステータス">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.5*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="0.5*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Text="非常停止"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"/>
                                <CheckBox 
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsEnabled="False"/>
                                <!--IsChecked="{Binding TR.IsOpenedRecovery, Mode=OneWay}"-->

                                <TextBlock 
                                    Text="ステータス"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"/>
                                <TextBox 
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Margin="2"
                                    IsReadOnly="True"
                                    TextAlignment="Right"
                                    Text="{Binding TR.MachineState, Mode=OneWay}"/>
                                <TextBlock 
                                    Text="シーケンス"
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"/>
                                <TextBox 
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    Margin="2"
                                    IsReadOnly="True"
                                    TextAlignment="Right"
                                    Text="{Binding TR.MachineSequence, Mode=OneWay}"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox DockPanel.Dock="Bottom" Header="射出キュー">
                            <DataGrid 
                                ItemsSource="{Binding TR.PotsQueue}"
                                AutoGenerateColumns="False"
                                CanUserResizeRows="False" 
                                CanUserAddRows="False" 
                                IsSynchronizedWithCurrentItem="True" 
                                CanUserSortColumns="False"
                                CanUserResizeColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn 
                                        Header="Num" Binding="{Binding Path=.}" 
                                        Width="1*"/>
                                </DataGrid.Columns>
                            </DataGrid>   
                        </GroupBox>
                        
                        <GroupBox DockPanel.Dock="Bottom" Header="コントロール">
                            <DockPanel>
                                <!--ボタン入力類-->
                                <Grid DockPanel.Dock="Top" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button 
                                        Content="発射"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="5"
                                        Height="25"
                                        Command="{Binding InjectButton_Click}"/>
                                </Grid>

                                <!--テキスト入力類-->
                                <Grid DockPanel.Dock="Top" Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>


                                    <TextBlock 
                                        Text="射出速度"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"/>
                                    <TextBox 
                                        Grid.Row="1" 
                                        Grid.Column="2"
                                        Margin="2"
                                        FontSize="20"
                                        TextAlignment="Right"
                                        Text="{Binding InjectSpeedText}"
                                        CommandManager.PreviewExecuted="{mvvm:InvokeCommand NoPasteTextBox_PreviewExecuted}"
                                        PreviewTextInput="{mvvm:InvokeCommand InjectTextBox_PreviewTextInput}"
                                        PreviewKeyDown="{mvvm:InvokeCommand InputDataTextBox_PreviewKeyDown}"
                                        LostFocus="{mvvm:InvokeCommand InjectTextBox_LostFocus}"/>
                                    <TextBlock 
                                        Text="m/s"
                                        Grid.Row="1"
                                        Grid.Column="3"
                                        VerticalAlignment="Bottom"
                                        Margin="2"/>

                                    <TextBlock 
                                        Text="着弾予測(床)"
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"/>
                                    <TextBox 
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Margin="2"
                                        FontSize="20"
                                        TextAlignment="Right"
                                        IsReadOnly="True"
                                        Text="{Binding FallPredictionText}"/>
                                    <TextBlock 
                                        Text="m"
                                        Grid.Row="2"
                                        Grid.Column="3"
                                        VerticalAlignment="Bottom"
                                        Margin="2"/>


                                </Grid>
                            </DockPanel>
                        </GroupBox>
                        

                    </DockPanel>
                </TabItem>
                <TabItem Header="DR" IsEnabled="False">

                </TabItem>
            </TabControl>




            <TabControl Grid.Row="2" Grid.Column="0"  Margin="0, 5, 0, 0">
                <TabItem Header="出力">
                    <TabItem.DataContext>
                        <vmodel:OutputLog/>
                    </TabItem.DataContext>
                    <TextBox 
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto"
                        IsReadOnly="True"
                        IsReadOnlyCaretVisible="True"
                        FontSize="8" 
                        Text="{Binding Log.Text}"
                        TextChanged="{mvvm:InvokeCommand Log_TextChanged}"/>
                </TabItem>
            </TabControl>


            <GridSplitter 
                Grid.Row="2" Grid.Column="0"
                HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="5"/>
            <GridSplitter 
                Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"
                HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="5"/>
        </Grid>
    </Viewbox>
</Window>
